version: "3"

services:
  # UI Web App Service
  pp-ui-web-app:
    build: ./ppui_docker
    ports:
      - "3000:3000"
    networks:
      - internal

  # UI Web App's Nginx (load balancer)
  ui-nginx:
    image: nginx:latest
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - internal

  # Relayer Service (PP Relay)
  pp-relayer-node:
    build: ./pprelay_docker
    restart: always
    env_file: ./pprelay_docker/.env
    environment:
      REDIS_URL: redis:6379
    depends_on: [redis]
    ports:
      - "3001:3001"
    networks:
      - internal

  # Redis Service for Relayer
  redis:
    image: redis
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    ports: ["6379:6379"]
    volumes:
      - redis:/data
    networks:
      - internal

  dockergen:
    image: poma/docker-gen
    container_name: dockergen
    restart: always
    command: -notify-sighup nginx-relayer -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    restart: always
    environment:
      NGINX_DOCKER_GEN_CONTAINER: dockergen
      NGINX_PROXY_CONTAINER: nginx-relayer
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  internal:
    driver: bridge

volumes:
  conf:
  vhost:
  html:
  certs:
  redis:
